name: Build
on:
  push:
    branches:
      - master
jobs:
  build:
    name: Build on push
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        ocaml-version: ['4.08.0', '4.09.0', '4.10.0']
    steps:
      - uses: actions/checkout@master
      - uses: avsm/setup-ocaml@v1.0
        with: 
          ocaml-version: ${{ matrix.ocaml-version }}
      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest' 
        run: opam install .
        continue-on-error: true
      - name: Install dependencies (Unix)
        if: matrix.os != 'windows-latest'
        run: opam install .
      - name: Build
        run: opam exec -- dune build @install
      - name: Test
        if: matrix.os != 'windows-latest' # The tests don't work on Windows
        run: opam exec -- dune runtest
      - name: Check syntax update
        if: matrix.os != 'windows-latest'
        run: |
          ls; ls example
          for e in $(ls example); do opam exec -- dune exec ./naturL.exe -- --input example/$e; done
      - name: Print files (Unix)
        if: matrix.os != 'windows-latest'
        run: find .
      - name: Upload transpiler artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ matrix.os }}-naturL.exe
          path: _build/default/naturL.exe
      - name: Upload lsp server artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ matrix.os }}-naturL-lsp-server.exe
          path: _build/default/lsp/server.exe
